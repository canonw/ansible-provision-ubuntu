---

- name: Check if rbenv installed
  become: false
  stat:
      path: '{{ ansible_env.HOME }}/.rbenv'
  register: rbenv_result

- name: Install pre-requisite
  apt: pkg="{{ item }}" state=present
  with_items:
    - autoconf
    - bison
    - build-essential
    - libssl-dev
    - libyaml-dev
    - libreadline-dev
    - zlib1g-dev
    - libncurses5-dev
    - libffi-dev
    - libgdbm-dev
  when: rbenv_result.stat.exists == 0

- name: Cloning rbenv repository
  become: false
  git: repo='https://github.com/rbenv/rbenv.git'
       dest='{{ ansible_env.HOME }}/.rbenv'
       update=no
  when: rbenv_result.stat.exists == 0

- name: Cloning ruby-build repository
  become: false
  git: repo='https://github.com/rbenv/ruby-build.git'
       dest='{{ ansible_env.HOME }}/.rbenv/plugins/ruby-build'
       update=no
  when: rbenv_result.stat.exists == 0

- name: "Configure bashrc rvm for user {{ ansible_env.USER }}"
  lineinfile: dest="{{ ansible_env.HOME }}/.bashrc" line="{{ item }}" create="yes"
  with_items:
    - "# rbenv setting"
    - 'export PATH="$HOME/.rbenv/bin:$PATH"'
    - 'eval "$(rbenv init -)"'
    - 'source $HOME/.rbenv/completions/rbenv.bash'
  when: rbenv_result.stat.exists == 0

# TODO: Handle manually
# - name: Install ruby 2.5.1 for select {{ ansible_env.USER }}
#   shell: $SHELL -lc "rbenv install --skip-existing 2.5.1 && rbenv global 2.5.1"
#   become: false
#   environment:
#     path: "{{ ansible_env.HOME }}/.rbenv/bin:{{ ansible_env.PATH }}"
#   when: rbenv_result.stat.exists == 0

- name: "Configure bashrc rbenv for user {{ ansible_env.USER }}"
  lineinfile: dest="/home/{{ ansible_env.USER }}/.bashrc" line="{{ item }}" create="yes"
  with_items:
    - "# rbenv"
    # Fix this error - uncommon.mk:491: recipe for target 'rdoc' failed
    - "export RUBY_CONFIGURE_OPTS=--disable-install-doc"
  when: rbenv_result.stat.exists == 0
 
